


hours_hired => Compute hours
hours_idle => Idle hours
rewards_claimed
rewards_unclaimed




Engineering
Endpoint: get-all-clusters 

Endpoint: update-field-value-of-cluster


const web3 = require("@solana/web3.js");
const { setEngine } = require("crypto")
(async () => {
  const solana = new web3.Connection("http://sample-endpoint-name.network.quiknode.pro/token-goes-here/");
  // Replace fromWallet with your public/secret keypair, wallet must have funds to pay transaction fees.
  const fromWallet = web3.Keypair.generate();
  const toWallet = web3.Keypair.generate();
  const transaction = new web3.Transaction().add(
    web3.SystemProgram.transfer({
      fromPubkey: fromWallet.publicKey,
      toPubkey: toWallet.publicKey,
      lamports: web3.LAMPORTS_PER_SOL / 100,
    })
  );
  console.log(await solana.sendTransaction(transaction, [fromWallet]));
})();


https://special-late-panorama.solana-mainnet.discover.quiknode.pro/5c67e2431ad48cc65eab12a321ee63cb7f1cc021/
wss://special-late-panorama.solana-mainnet.discover.quiknode.pro/5c67e2431ad48cc65eab12a321ee63cb7f1cc021/

5c67e2431ad48cc65eab12a321ee63cb7f1cc021
